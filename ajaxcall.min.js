//Developed By Swagfin Thrones
//Email: georgewainaina18@gmail.compile
//Overridable Confirmation Dialog Used on Calls having Confirmation ajax-confirm
function confirm_request(message){
	//Apply your Own here e.g. Toastr
	return confirm(message);
}
//Refresh All Ajax Loaders with Ajax-loader
function refreshAjaxLoaders() {

    $('*[ajax-loader]').each(function (i, obj) {
        //Send Request to All

        let objectElement = $(this);
		//Confirmation
		var confirmation=objectElement.attr("ajax-confirm");
		//New Verison | Ajax Loaders with Confirm will not be autoloaded Since it requires Confirmation
		if (typeof(confirmation) !== "undefined")
		{
			//Skip Or Log
		}
		else{
		
			//Add Loading
			objectElement.addClass('loading');
			//Get Values
			var url = objectElement.attr("ajax-loader");
			var data = objectElement.attr("ajax-data");
			var type = objectElement.attr("ajax-type");
			if (typeof(type) == "undefined") { type = "GET"; }
			//Serialize Data
			var serialized_data = null;
			if (typeof(data) !== "undefined") { serialized_data = JSON.parse(data); }
			//Call
			$.ajax({
				type: type,
				url: url,
				data: serialized_data,
				success: function (msg) {
					objectElement.html(msg);
				},
				error: function (xhr, status, error) {
					toastr.error("An Error Occurred while Requesting : Error: " + error);
				},
				complete: function (data) {
					objectElement.removeClass('loading');
				}

			});
		}

    });

}

function refreshAjaxLoader(ElementId,ConfirmRequest=true) {

    let objectElement = $("#" + ElementId);
    //Check Element if Exists
    if (objectElement.length < 1) { console.log('No Such Element with Id' + ElementId); return false; }
    //Confirmation
	if(ConfirmRequest){
	var confirmation=objectElement.attr("ajax-confirm");
	if (typeof(confirmation) !== "undefined" && confirm_request(confirmation)==false) { return false; }	
	}
	//Add Loading	
    objectElement.addClass('loading');
    //Get Values
    var url = objectElement.attr("ajax-loader");
    var data = objectElement.attr("ajax-data");
    var type = objectElement.attr("ajax-type");
    if (typeof(type) == "undefined") { type = "GET"; }
    //Serialize Data
    var serialized_data = null;
    if (typeof(data) !== "undefined") { serialized_data = JSON.parse(data); }
    //Call
    $.ajax({
        type: type,
        url: url,
        data: serialized_data,
        success: function (msg) {
            objectElement.html(msg);
        },
        error: function (xhr, status, error) {
            toastr.error("An Error Occurred while Requesting : Error: " + error);
        },
        complete: function (data) {
            objectElement.removeClass('loading');
        }

    });
}


//Form Forms
$(document).on('submit', '*[ajax-form]', function (event) {
    //Prevent Default
    event.preventDefault();
    let objectForm = $(this);
    //Confirmation
	var confirmation=objectForm.attr("ajax-confirm");
	if (typeof(confirmation) !== "undefined" && confirm_request(confirmation)==false) { return false; }	
    //Add Loading
    objectForm.addClass('loading');
    objectForm.find('.form').addClass('loading');
    //Get Values
    var url = objectForm.attr("action");
    var type = objectForm.attr("method");
    if (typeof(type) == "undefined") { type = "GET"; }
    //Call
    $.ajax({
        type: type,
        url: url,
        data: $(objectForm).serialize(),
        success: function (msg) {
            objectForm.prepend(msg);
        },
        error: function (xhr, status, error) {
            toastr.error("An error Occurred while sending request <b>" + error + "</b>, Try Again Later !");
        },
        complete: function (data) {
            objectForm.removeClass('loading');
            objectForm.find('.form').removeClass('loading');
        }

    });
    return false;
});


//Form Forms
$(document).on('click', '*[ajax-url]', function (event) {
    //Prevent Default
    event.preventDefault();
    let objectClicked = $(this);
    //Confirmation
	var confirmation=objectClicked.attr("ajax-confirm");
	if (typeof(confirmation) !== "undefined" && confirm_request(confirmation)==false) { return false; }	
	//Add Loading
    objectClicked.addClass('loading');
    objectClicked.attr("disabled", true);
    //Get Values
    var url = objectClicked.attr("ajax-url");
    var data = objectClicked.attr("ajax-data");
    var type = objectClicked.attr("ajax-type");
    if (typeof(type) == "undefined") { type = "GET"; }
    //Serialize Data
    var serialized_data = null;
    if (typeof(data) !== "undefined") { serialized_data = JSON.parse(data); }
    //Call
    $.ajax({
        type: type,
        url: url,
        data: serialized_data,
        success: function (msg) {
            objectClicked.parent().prepend(msg);
        },
        error: function (xhr, status, error) {
            toastr.error("An Error Occurred while Sending Request: Error: " + error);
        },
        complete: function (data) {
            objectClicked.attr("disabled", false);
            objectClicked.removeClass('loading');
        }

    });
    return false;
});


//Refresh Ajax Loaders
$(document).ready(function () {
    //Loop Each
    refreshAjaxLoaders();
});	
